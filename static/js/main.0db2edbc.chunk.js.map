{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expense.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onChangeFilter","ExpenseDate","Data","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpenseList","items","length","map","expense","ChartBar","barFillHight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","ExpensesChart","chartDataPoints","expenses","getMonth","Expense","filteredYear","setFilteredYear","filteredExpenses","item","filter","selectedYear","INITIAL_DATA","App","setExpense","enterdExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0db2edbc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n   \r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    \r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    \r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const dropDownChangeHandler =(event)=>{\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange = {dropDownChangeHandler}>\r\n          <option value='2023'>2023</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(Data) {\r\n\r\n    const month = Data.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = Data.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = Data.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(Data) {\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"expense-item\">\r\n                <ExpenseDate date={Data.date}></ExpenseDate>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{Data.title}</h2>\r\n                    <div className=\"expense-item__price\">${Data.amount}</div>\r\n                </div>\r\n\r\n            </div>\r\n        </li>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from \"react\";\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nconst ExpenseList = (props) =>{\r\n\r\n    if (props.items.length === 0) \r\n    {\r\n        return (\r\n            <h2 className=\"expenses-list__fallback\">\r\n                No Expeses To Show.\r\n            </h2>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map(expense => (\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            />\r\n        ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ExpenseList;","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHight = '0%';\r\n    if (props.maxValue > 0) {\r\n        barFillHight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\"\r\n                    style={{ height: barFillHight }}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\"> {props.label}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) =>{\r\n\r\n    const chartDataPoints = [\r\n        { label :'Jan' , value :0},\r\n        { label :'Feb' , value :0},\r\n        { label :'Mar' , value :0},\r\n        { label :'Apr' , value :0},\r\n        { label :'May' , value :0},\r\n        { label :'Jun' , value :0},\r\n        { label :'Jul' , value :0},\r\n        { label :'Aug' , value :0},\r\n        { label :'Sep' , value :0},\r\n        { label :'Oct' , value :0},\r\n        { label :'Nov' , value :0},\r\n        { label :'Dec' , value :0},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return(\r\n        <Chart dataPoints = {chartDataPoints} />\r\n    );\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport './Expense.css';\r\nimport ExpenseList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expense = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.item.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <div className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear}\r\n                onChangeFilter={filterChangeHandler}\r\n            />\r\n            <ExpensesChart expenses ={filteredExpenses}/>\r\n            <ExpenseList items={filteredExpenses} />\r\n        </div>\r\n    );\r\n}\r\nexport default Expense;","import React  , {useState }from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expense from \"./components/Expenses/Expense\";\n\nconst INITIAL_DATA =\n    [\n      {id:'e1', title: 'Shoping ', amount: 150.50, date: new Date(2020, 5, 14) },\n      {id:'e2',title: 'Car insurance', amount: 52.75, date: new Date(2021, 8, 2) },\n      {id:'e3',title: 'Travelling  ', amount: 180.45, date: new Date(2021, 3, 10) },\n      \n    ];\n\nconst App = ()=> {\n  const [expenses,setExpense] = useState(INITIAL_DATA);\n\n  const addExpenseHandler = (enterdExpense) => {\n\n    setExpense((prevExpenses) =>{\n      return [enterdExpense , ...prevExpenses];\n    })  \n   // console.log(enterdExpense);\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense item={expenses} ></Expense>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}